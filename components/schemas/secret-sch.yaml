secretIn:
  type: object
  required:
    - data
  properties:
    data:
      type: object
      $ref: '#/secretData'
secretsListOut:
  type: object
  required:
    - data
    - meta
  properties:
    data:
      type: array
      items:
        type: object
        $ref: '#/secretData'
    meta:
      type: object
      example: '{}'
secretOut:
  type: object
  required:
    - data
    - meta
  properties:
    data:
      type: object
      $ref: '#/secretData'
    meta:
      type: object
      example: '{}'
secretEditIn:
  type: object
  required:
    - data
  properties:
    data:
      type: object
      required:
      - id
      - type
      - attributes
      properties:
        id:
          type: string
          description: Auth secret identifier. It has to match the identifier specified in the path.
          example: 5b4f337bff4304610483ba67
        type:
          type: string
          description: Allowed value `auth-secret`.
          enum:
            - auth-secret
        attributes:
          type: object
          $ref: '#/secretData/properties/attributes'
secretData:
  required:
    - id
    - type
    - links
    - attributes
    - relationships
  properties:
    id:
      type: string
      readOnly: true
      example: 5b4f337bff4304610483ba67
    type:
      type: string
      description: |
        Allowed value: `auth-secret`
      enum:
        - auth-secret
    links:
      type: object
      readOnly: true
      required:
        - self
      properties:
        self:
          type: string
          example: /v2/workspaces/5b4f337bff4304610483ba67/secrets/5b4f337bff4304610483ba67
    attributes:
      type: object
      required:
        - name
        - state
        - credentials
      properties:
        name:
          type: string
          description: Name of the auth secret
          example: Secret name
        state:
          type: string
          description: Auth secret state
          enum:
            - ready
            - error
        credentials:
          type: object
          oneOf:
            - type: object
              $ref: '#/credentialOauth2Object'
            - type: object
              $ref: '#/credentialOtherObject'
        type:
          type: string
          readOnly: true
          example: oauth2
        error:
          type: string
          description: Auth secret error
          example: Auth secret refreshing error
    relationships:
      type: object
      required:
        - workspace
        - user
        - auth_client
      properties:
        workspace:
          type: object
          readOnly: true
          required:
            - data
            - links
          properties:
            data:
              type: object
              required:
                - id
                - type
              properties:
                id:
                  type: string
                  example: 5b4f337bff4304610483ba67
                type:
                  type: string
                  enum:
                    - workspace
            links:
              type: object
              readOnly: true
              required:
                - self
              properties:
                self:
                  type: string
                  example: /v2/workspaces/5b4f337bff4304610483ba67
        user:
          type: object
          readOnly: true
          required:
            - data
            - links
          properties:
            data:
              type: object
              required:
                - id
                - type
              properties:
                id:
                  type: string
                  example: 5b4f337bff4304610483ba67
                type:
                  type: string
                  enum:
                    - user
            links:
              type: object
              required:
                - self
              properties:
                self:
                  type: string
                  example: /v2/users/5b4f337bff4304610483ba67
        auth_client:
          type: object
          required:
            - data
            - links
          properties:
            data:
              type: object
              required:
                - id
                - type
              properties:
                id:
                  type: string
                  example: 5b4f337bff4304610483ba67
                type:
                  type: string
                  enum:
                    - auth-client
            links:
              type: object
              readOnly: true
              required:
                - self
              properties:
                self:
                  type: string
                  example: /v2/tenants/5b4f337bff4304610483ba67/auth-clients/5b4f337bff4304610483ba67
credentialOauth2Object:
  type: object
  required:
    - access_token
  properties:
    access_token:
      type: string
      description: Auth secret access token
      example: ya29.a0AfH6SMC9aSZhds2dg3VpULECqzajjDE0qlyGDFfgxnBn8cwfj9cg_THWIpxPUSMsDcn70Obx_WwxXBQYfT8edbAIRJIsCiueyki6iTWA_DADbEx3n5vRU-pCXjSTav9s7Q
    refresh_token:
      type: string
      description: Auth secret refresh token
      example: 1//09cZWQ81C9F_-CgYIARAkSNwF-L9IrvRAYXy5RuPko6rRwzxfYPVykQep6cK7rUdHHSXIhiRw3fbZf3ReCI4DNuQStH_4JL2Y
    expires_in:
      type: integer
      description: Auth secret expired period. If not specified and `auth-client` is `oauth2` then the value will be taken from `token_expires_in` of linked `auth-client`. The value is set in seconds.
      example: 60
    additional_params:
      type: string
      description: Auth secret additional parameters
      example: access_type:offline,prompt:consent
    scope:
      type: string
      description: Auth secret scope
      example: https://www.googleapis.com/auth/spreadsheets
    fields:
      type: object
      description: If component has OAuthFieldView in component.json you can define additional fields in auth-secret for storing data
      properties:
         base_url:
           type: string
           example: https://example.com
credentialOtherObject:
  type: object
  example: '{ "login":"somelogin", "key":"somekey"}'
